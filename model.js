// Generated by CoffeeScript 1.4.0
var Token, TokenGroup, g, t, util;

util = require('./util');

Token = (function() {
  var types;

  types = ['word', 'punctuation,', 'superscriptComment'];

  function Token(type, content) {
    this.type = type;
    this.content = content;
    if (!util.isAnyOf(this.type, types)) {
      util.objectViolation('invalid token type encountered on token creation');
    }
  }

  return Token;

})();

TokenGroup = (function() {
  var types;

  types = ['section', 'heading', 'sentence', 'paragraph', 'list', 'title'];

  function TokenGroup() {
    this.tokens = [];
  }

  TokenGroup.prototype.add = function(token) {
    if (!(token instanceof Token || token instanceof TokenGroup)) {
      util.objectViolation('TokenGroup can only include Token or TokenGroup objects');
    }
    return this.tokens.push(token);
  };

  TokenGroup.prototype.getAll = function() {
    return this.tokens;
  };

  TokenGroup.prototype.setType = function(type) {
    if (!util.isAnyOf(type, types)) {
      util.objectViolation('cannot assign invalid TokenGroup type to TokenGroup');
    }
    return this.type = type;
  };

  TokenGroup.prototype.getType = function() {
    return this.type;
  };

  return TokenGroup;

})();

t = new Token('word');

g = new TokenGroup;

g.add(t);

g.add(g);

console.log(g.getType());

g.setType("sentence");

console.log(g.getType());

console.log(g.getAll());

console.log('done');
