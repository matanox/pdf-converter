// Generated by CoffeeScript 1.6.3
var fs, logging, storage, util;

util = require('../src/util');

storage = require('../src/storage');

logging = require('../src/logging');

fs = require('fs');

exports.go = function(req, res) {
  var bytes, name, serve, type;
  serve = function(bytes) {
    console.log(bytes);
    if (bytes) {
      /*
      fs.writeFile(outputFile, outputHtml, (err) -> 
        
        if err?
          res.send(500)
          throw err)
      */

      console.info('Sending response....');
      util.timelog('serving intermediary file');
      res.setHeader('Content-Type', 'application/pdf');
      res.end(bytes);
      return util.timelog('serving intermediary file');
    }
  };
  if (req.session.name != null) {
    name = req.session.name;
    type = req.param('type');
    if (type != null) {
      console.log(name + ' ' + type);
      switch (type) {
        case 'pdf':
          return bytes = storage.fetch('pdf', name, serve);
        case 'html':
          return res.sendfile(name + '.html', {
            root: '../local-copies/' + '/html-converted' + '/' + name
          });
        default:
          console.error('unsupported type parameter supplied');
          return res.send(500);
      }
    } else {
      console.error('type parameter omitted');
      return res.send(500);
    }
  } else {
    console.error('session does not contain the name parameter');
    return res.send(500);
  }
};
