// Generated by CoffeeScript 1.6.3
var docMeta, exec, executable, executalbeParams, logging, redirectToExtract, redirectToShowHtml, storage, util;

util = require('../util');

logging = require('../logging');

docMeta = require('../docMeta');

storage = require('../storage');

require('stream');

exec = require("child_process").exec;

executable = "pdf2htmlEX";

executalbeParams = "--embed-css=0 --embed-font=0 --embed-image=0 --embed-javascript=0";

exports.go = function(localCopy, docLogger, req, res) {
  var execCommand, name, outFolder;
  util.timelog("from upload to serving");
  name = localCopy.replace("../local-copies/pdf/", "").replace(".pdf", "");
  docMeta.storePdfMetaData(localCopy, docLogger);
  storage.store("pdf", name, localCopy, docLogger);
  util.timelog("Conversion to html");
  docLogger.info("Starting the conversion from pdf to html");
  execCommand = executable + " ";
  outFolder = "../local-copies/" + "html-converted/";
  execCommand += localCopy + " " + executalbeParams + " " + "--dest-dir=" + outFolder + "/" + name;
  docLogger.info(execCommand);
  return exec(execCommand, function(error, stdout, stderr) {
    docLogger.info(executable + "'s stdout: " + stdout);
    docLogger.info(executable + "'s stderr: " + stderr);
    if (error !== null) {
      return docLogger.error(executable + "'sexec error: " + error);
    } else {
      util.timelog("Conversion to html", docLogger);
      return require('./extract').go(name, res, docLogger);
    }
  });
};

redirectToShowHtml = function(redirectString) {
  docLogger.info("Passing html result to next level handler, by redirecting to: " + redirectString);
  res.writeHead(301, {
    Location: redirectString
  });
  return res.end();
};

redirectToExtract = function(redirectString) {
  docLogger.info("Passing html result to next level handler, by redirecting to: " + redirectString);
  res.writeHead(301, {
    Location: redirectString
  });
  return res.end();
};
