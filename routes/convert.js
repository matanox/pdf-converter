// Generated by CoffeeScript 1.6.3
var docMeta, exec, executable, executalbeParams, fetch, fs, getFromUrl, logging, storage, util;

util = require('../util');

logging = require('../logging');

docMeta = require('../docMeta');

storage = require('../storage');

getFromUrl = require('request');

exec = require("child_process").exec;

fs = require("fs");

require("stream");

executable = "pdf2htmlEX";

executalbeParams = "--embed-css=0 --embed-font=0 --embed-image=0 --embed-javascript=0";

fetch = function(inkUrl, callOnSuccess) {
  var download, outFile;
  outFile = "../local-copies/" + "pdf/" + inkUrl.replace("https://www.filepicker.io/api/file/", "") + ".pdf";
  return download = getFromUrl(inkUrl, function(error, response, body) {
    if (!error && response.statusCode === 200) {
      return callOnSuccess(outFile);
    } else {
      console.log("fetching from InkFilepicker returned http status " + response.statusCode);
      if (error) {
        if (error) {
          return logging.log("fetching from InkFilepicker returned error " + error);
        }
      }
    }
  }).pipe(fs.createWriteStream(outFile));
};

exports.go = function(req, res) {
  var convert, redirectToExtract, redirectToShowHtml;
  redirectToShowHtml = function(redirectString) {
    logging.log("Passing html result to next level handler, by redirecting to: " + redirectString);
    res.writeHead(301, {
      Location: redirectString
    });
    return res.end();
  };
  redirectToExtract = function(redirectString) {
    logging.log("Passing html result to next level handler, by redirecting to: " + redirectString);
    res.writeHead(301, {
      Location: redirectString
    });
    return res.end();
  };
  convert = function(localCopy) {
    var execCommand, name, outFolder;
    name = localCopy.replace("../local-copies/pdf/", "").replace(".pdf", "");
    storage.store("pdf", name, localCopy);
    docMeta.storePdfMetaData(localCopy);
    logging.log("Starting the conversion from pdf to html");
    util.timelog("Conversion to html");
    execCommand = executable + " ";
    outFolder = "../local-copies/" + "html-converted/";
    execCommand += localCopy + " " + executalbeParams + " " + "--dest-dir=" + outFolder + "/" + name;
    logging.log(execCommand);
    return exec(execCommand, function(error, stdout, stderr) {
      logging.log(executable + "'s stdout: " + stdout);
      logging.log(executable + "'s stderr: " + stderr);
      if (error !== null) {
        return logging.log(executable + "'sexec error: " + error);
      } else {
        util.timelog("Conversion to html");
        return redirectToExtract("http://localhost/" + "extract" + "?name=" + name);
      }
    });
  };
  return fetch(req.query.tempLocation, convert);
};
