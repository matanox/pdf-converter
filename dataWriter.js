// Generated by CoffeeScript 1.6.3
var files, fs, logging, winston, winstonWrite;

logging = require('./logging');

winston = require('winston');

fs = require('fs');

files = {};

winstonWrite = function(writer, data) {
  return writer.info(data);
};

exports.write = function(inputFileName, dataType, data) {
  var err, nameBase, now, writer;
  if (files[inputFileName] == null) {
    files[inputFileName] = {};
  }
  if (files[inputFileName][dataType] == null) {
    writer = new winston.Logger;
    now = new Date();
    try {
      fs.mkdirSync('docData/' + inputFileName);
    } catch (_error) {
      err = _error;
      if (err.code !== 'EEXIST') {
        throw e;
      }
    }
    nameBase = 'docData/' + inputFileName + '/' + dataType + '-' + now.toISOString() + '.out';
    writer = new winston.Logger({
      transports: [
        new winston.transports.File({
          name: 'file#json',
          filename: nameBase + '.json',
          json: true,
          timestamp: false
        }), new winston.transports.File({
          name: 'file#text',
          filename: nameBase,
          json: false,
          timestamp: false
        })
      ],
      exitOnError: false
    });
    logging.cond("Data writing for [" + inputFileName + "], [" + dataType + "] is going to " + nameBase, 'dataWriter');
    files[inputFileName][dataType] = writer;
  }
  winstonWrite(files[inputFileName][dataType], data);
  return true;
};

exports.close = function(inputFileName) {
  var writer, _results;
  _results = [];
  for (writer in files[inputFileName]) {
    files[inputFileName][writer].close();
    _results.push(delete files[inputFileName][writer]);
  }
  return _results;
};
