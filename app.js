// Generated by CoffeeScript 1.4.0
'use strict';

var Primus, app, convert, express, extract, fs, googleAuthSetup, host, http, logConnection, logSparks, nconf, path, primus, routes, server, sparks, user;

fs = require("fs");

nconf = require("nconf");

nconf.argv().env();

nconf.defaults({
  host: "localhost"
});

host = nconf.get("host");

console.log("Host is " + nconf.get("host"));

express = require("express");

routes = require("./routes");

user = require("./routes/user");

convert = require("./routes/convert");

extract = require("./routes/extract");

http = require("http");

path = require("path");

Primus = require('primus');

app = express();

app.set("port", process.env.PORT || 80);

console.log("Port is " + app.get("port"));

app.set("views", __dirname + "/views");

app.set("view engine", "ejs");

app.use(express.favicon());

app.use(express.logger("dev"));

app.use(express.bodyParser());

app.use(express.methodOverride());

app.use(express.cookieParser("93ADEE3820567DB"));

app.use(express.session());

app.use(app.router);

app.use(express["static"](path.join(__dirname, "public")));

if ("development" === app.get("env")) {
  app.use(express.errorHandler());
}

app.get("/", routes.index);

app.get("/users", user.list);

app.get("/convert", convert.go);

app.get("/extract", extract.go);

googleAuthSetup = function() {
  var GoogleStrategy, passport;
  passport = require("passport");
  GoogleStrategy = require("passport-google").Strategy;
  passport.use(new GoogleStrategy({
    returnURL: "http://" + host + "/auth/google/return",
    realm: "http://" + host + "/auth/google"
  }, function(identifier, profile, done) {
    return console.log("authorized user " + identifier + "\n" + JSON.stringify(profile));
  }));
  app.get("/auth/google", passport.authenticate("google"));
  app.get("/auth/google/return", routes.index);
  return true;
};

googleAuthSetup;


server = http.createServer(app);

primus = new Primus(server, {
  transformer: 'websockets'
});

server.listen(app.get("port"), function() {
  return console.log("Server listening on port " + app.get("port"));
});

sparks = 0;

logSparks = function() {
  return console.log('Primus: ' + sparks + ' ' + 'active sparks');
};

logConnection = function(spark, message) {
  return 'Primus: ' + spark.address.ip + ' (id ' + spark.id + ') ' + message;
};

primus.on('connection', function(spark) {
  sparks += 1;
  console.log(logConnection(spark, 'connected on port ' + spark.address.port));
  return logSparks();
});

primus.on('disconnection', function(spark) {
  sparks -= 1;
  console.log(logConnection(spark, 'disconnected'));
  return logSparks();
});

/*
http.get('http://localhost/extract?name=xt7duLM0Q3Ow2gIBOvED', (res) ->
  console.log("server response is: " + res.statusCode))
*/

