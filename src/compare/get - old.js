// Generated by CoffeeScript 1.6.3
var docsDataDir, fs, getPair, jsdiff, logging, pad, util;

fs = require('fs');

util = require('../util/util');

logging = require('../util/logging');

jsdiff = require('diff');

docsDataDir = require('../data/dataWriter').docsDataDir;

getPair = function(inputFileName, dataType) {
  var docDataDir, relevantDataFiles;
  docDataDir = docsDataDir + '/' + inputFileName + '/';
  relevantDataFiles = fs.readdirSync(docDataDir).filter(function(dataFileName) {
    return dataFileName.indexOf(dataType) === 0;
  });
  if (relevantDataFiles.length > 1) {
    relevantDataFiles.sort().reverse();
    return relevantDataFiles.slice(0, 2).map(function(dataFileName) {
      return docDataDir + dataFileName;
    });
  }
  return void 0;
};

pad = function(string) {
  var trimmed;
  trimmed = util.trim(string, '\n');
  return string.split('\n').join('\n\n');
};

exports.diff = function(inputFileName, dataType) {
  var diffs, filesContent, pair, rawDiff;
  logging.logYellow('before diff');
  pair = getPair(inputFileName, dataType);
  if (pair != null) {
    filesContent = pair.map(function(file) {
      return fs.readFileSync(file, {
        encoding: 'utf8'
      });
    });
    console.log(filesContent[0]);
    console.log(filesContent[1]);
    rawDiff = jsdiff.diffLines(filesContent[0], filesContent[1]).filter(function(diffDescriptor) {
      return diffDescriptor.added || diffDescriptor.removed;
    });
    console.dir(rawDiff);
    diffs = [];
    rawDiff.forEach(function(diffDescriptor) {
      var splits;
      diffDescriptor.value = util.trim(diffDescriptor.value, '\n');
      splits = diffDescriptor.value.split('\n');
      return splits.forEach(function(split) {
        split.added = diffDescriptor.added;
        split.removed = diffDescriptor.removed;
        return diffs.push(split);
      });
    });
    console.dir(diffs);
    return logging.logYellow('after diff');
  }
};
