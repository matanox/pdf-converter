// Generated by CoffeeScript 1.6.3
var XMLescaping, logging, signal, util;

logging = require('../util/logging');

util = require('../util/util');

exports.wrapAsJatsArticle = function(content) {
  return "<?xml version=\"1.0\" encoding=\"UTF-8\"?><article xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:mml=\"http://www.w3.org/1998/Math/MathML\">" + content + "</article>";
};

XMLescaping = [
  {
    from: "&",
    to: "&amp;"
  }, {
    from: "<",
    to: "&lt;"
  }, {
    from: ">",
    to: "&gt;"
  }, {
    from: "\"\"",
    to: "&quot;"
  }, {
    from: "'",
    to: "&apos;"
  }
];

exports.escape = function(string) {
  var e, _i, _len;
  for (_i = 0, _len = XMLescaping.length; _i < _len; _i++) {
    e = XMLescaping[_i];
    string = string.replace(new RegExp(e.from, 'g'), e.to);
  }
  return string;
};

signal = exports.signal = function(type, action, paramObj) {
  switch (type) {
    case 'abstract':
      if (action === 'opener') {
        return '<front><article-meta><abstract><object-id>dummy</object-id><p>';
      }
      if (action === 'closer') {
        return '</p></abstract></article-meta></front>';
      }
      break;
    case 'body':
      if (action === 'opener') {
        return '<body>';
      }
      if (action === 'closer') {
        return '</body>';
      }
      break;
    case 'paragraph':
      if (action === 'opener') {
        return '<p>';
      }
      if (action === 'closer') {
        return '</p>';
      }
      break;
    case 'section':
      if (action === 'opener') {
        return "<sec sec-type=\"" + paramObj.sectionType + "\"><title>" + paramObj.sectionName + "</title>";
      }
      if (action === 'closer') {
        return '</sec>';
      }
  }
};

exports.init = '';
