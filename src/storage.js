// Generated by CoffeeScript 1.6.3
var fs, logging, riak, util;

util = require('./util/util');

logging = require('./util/logging');

riak = require('riak-js').getClient({
  host: "localhost",
  port: "8098"
});

fs = require('fs');

exports.store = function(bucket, filename, fileContent, docLogger) {
  util.timelog(filename, "storing file to clustered storage");
  return riak.save(bucket, filename, fileContent, function(error) {
    util.timelog(filename, "storing file to clustered storage");
    if (error != null) {
      return console.error("failed storing file " + filename + " to clustered storage, with error: " + error);
    }
  });
};

exports.fetch = function(bucket, filename, callback) {
  util.timelog("fetching file from clustered storage");
  return riak.get(bucket, filename, function(error, fileContent) {
    util.timelog(filename, "fetching file from clustered storage");
    if (error != null) {
      return callback(false);
    } else {
      return callback(fileContent);
    }
  });
};

/*
riak.get('pdf', 'tXqIBGiBR5aMgxBQBOVY', (error, fileContent) ->
  if error
    logging.log(error)
  else
    logging.log(fileContent)
  fs.writeFileSync('back-from-riak.pdf', fileContent))
*/


/*
  #
  # On hold rethinkdb integration - using Riak for pdf2htmlEX caching for now
  #
  dbms   =  require 'rethinkdb'
  dbms.connect( {host: 'localhost', port: 28015}, (err, connection) ->
    if (err) then throw err
    dbms.db('test').tableCreate('file_hashes').run(connection, (err, result) ->
        if (err) then throw err;
        console.log(JSON.stringify(result, null, 2))
      )
  )
*/

