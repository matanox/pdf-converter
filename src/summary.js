// Generated by CoffeeScript 1.6.3
var analytic, assert, exec, fs, getQuerySingleResult, logging, query, rdbms, serveInEditor, tmpDir, util;

assert = require('assert');

util = require('./util/util');

logging = require('./util/logging');

analytic = require('./util/analytic');

rdbms = require('./storage/rdbms/rdbms');

tmpDir = require('os').tmpdir();

fs = require('fs');

exec = require('./util/exec');

getQuerySingleResult = function(resultArray) {
  var resultObj;
  if (resultArray.length === 1) {
    resultObj = resultArray[0];
    return resultObj[Object.keys(resultObj)[0]];
  }
  return null;
};

serveInEditor = function(docName, dataArray) {
  var tmpFile;
  tmpFile = "" + tmpDir + "/" + docName;
  fs.writeFileSync(tmpFile, dataArray.join('\n'));
  return exec('subl', [tmpFile], function() {});
};

query = function() {
  var knex, runID;
  knex = rdbms.knex;
  runID = null;
  return knex('runIDs').max('order').then(function(result) {
    var lastRun;
    lastRun = getQuerySingleResult(result);
    if (!lastRun) {
      throw 'No data found';
    }
    return knex.select('runID').from('runIDs').where({
      order: lastRun
    });
  }).then(function(result) {
    runID = getQuerySingleResult(result);
    console.log(runID);
    exec('subl', ['-n'], function() {});
    return knex.select('docName').from('runs').where({
      runID: runID
    }).pluck('docName');
  }).map(function(docName) {
    return knex.select('sentence').from('sentences').where({
      runID: runID,
      docName: docName
    }).pluck('sentence').then(function(result) {
      return serveInEditor(docName, result);
    });
  });
};

query();
