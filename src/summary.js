// Generated by CoffeeScript 1.6.3
var Promise, analytic, assert, exec, fs, getQuerySingleResult, logging, query, rdbms, serveInEditor, tmpDir, util;

assert = require('assert');

util = require('./util/util');

logging = require('./util/logging');

analytic = require('./util/analytic');

rdbms = require('./storage/rdbms/rdbms');

tmpDir = require('os').tmpdir();

fs = require('fs');

Promise = require('bluebird');

exec = Promise.promisify(require('./util/exec'));

getQuerySingleResult = function(resultArray) {
  var resultObj;
  if (resultArray.length === 1) {
    resultObj = resultArray[0];
    return resultObj[Object.keys(resultObj)[0]];
  }
  return null;
};

serveInEditor = function(docName, dataArray) {
  var tmpFile;
  tmpFile = "" + tmpDir + "/" + docName;
  fs.writeFileSync(tmpFile, dataArray.join('\n'));
  return exec('subl', [tmpFile]);
};

query = function(dataType, field) {
  var knex, runID;
  knex = rdbms.knex;
  runID = null;
  return knex('runIDs').max('order').then(function(result) {
    var lastRun;
    lastRun = getQuerySingleResult(result);
    if (!lastRun) {
      throw 'No data found';
    }
    return knex.select('runID').from('runIDs').where({
      order: lastRun
    });
  }).then(function(result) {
    runID = getQuerySingleResult(result);
    return exec('subl', ['-n']).then(function(execReturn) {
      return knex.select('docName').from('runs').where({
        runID: runID
      }).pluck('docName');
    });
  }).map(function(docName) {
    return knex.select(field).from(dataType).where({
      runID: runID,
      docName: docName
    }).pluck(field).then(function(result) {
      return serveInEditor(docName, result);
    });
  });
};

query('sentences', 'sentence').then(query('abstract', 'abstract'));
