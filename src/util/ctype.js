// Generated by CoffeeScript 1.6.3
var isAlphabetChar, isLowerCaseChar, isPunctuationChar, isUpperCaseChar, logging, util;

util = require('./util');

logging = require('./logging');

isAlphabetChar = function(char) {
  return char.toUpperCase() !== char.toLowerCase();
};

exports.isAlphabetChar = isAlphabetChar;

isLowerCaseChar = function(char) {
  return char === char.toLowerCase();
};

isPunctuationChar = function(char) {
  return ['.', ',', ';', '?', '!'].indexOf(char) !== -1;
};

exports.sentenceOpenerChar = function(char) {
  return isAlphabetChar(char) && isUpperCaseChar(char);
};

exports.isLowerCaseChar = isLowerCaseChar;

isUpperCaseChar = function(char) {
  return !isLowerCaseChar(char);
};

exports.isUpperCaseChar = isUpperCaseChar;

exports.testPureUpperCase = function(string) {
  var char, _i, _len, _ref;
  if (string.length < 3) {
    return false;
  }
  _ref = string.split('');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    char = _ref[_i];
    if (!isAlphabetChar(char)) {
      return false;
    }
    if (isLowerCaseChar(char)) {
      return false;
    }
  }
  return true;
};

exports.testWeakUpperCase = function(string) {
  var char, _i, _len, _ref;
  if (string.length < 3) {
    return false;
  }
  _ref = string.split('');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    char = _ref[_i];
    if (isAlphabetChar(char)) {
      if (isLowerCaseChar(char)) {
        return false;
      }
    }
  }
  return true;
};

exports.testInterspacedTitleWord = function(string) {
  var i, _i, _ref;
  if (string.length < 4) {
    return false;
  }
  for (i = _i = 0, _ref = string.length / 2; _i <= _ref; i = _i += 2) {
    if (!(isAlphabetChar(string.charAt(i)) && string.charAt(i + 1) === util.anySpaceChar)) {
      return false;
    }
  }
  return true;
};
